apply plugin: 'com.android.library'
apply plugin: 'kotlin-multiplatform'
apply plugin: 'kotlinx-serialization'
apply plugin: 'org.jetbrains.kotlin.native.cocoapods'
apply plugin: "com.squareup.sqldelight"
apply plugin: 'co.touchlab.kotlinxcodesync'

// CocoaPods requires the podspec to have a version.
version = "1.0"


android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 21
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main {
            setRoot('src/androidMain')
        }
        release {
            setRoot('src/androidMainRelease')
        }
        debug {
            setRoot('src/androidMainDebug')
        }
        test {
            setRoot('src/androidUnitTest')
        }
        testRelease {
            setRoot('src/androidUnitTestRelease')
        }
        testDebug {
            setRoot('src/androidUnitTestDebug')
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        //This is for MultiplatformSettings
        debug {
            // MPP libraries don't currently get this resolution automatically
            matchingFallbacks = ['release']
        }
    }
}


kotlin {
    targets {
        jvm()
        final def iOSTarget = System.getenv('SDK_NAME')?.startsWith("iphoneos") \
                              ? presets.iosArm64 : presets.iosX64

        fromPreset(iOSTarget, 'iOS') {
            binaries {
                framework('common')
            }
        }

        fromPreset(presets.android, 'android')

    }

    js {
        compileKotlinJs {
            kotlinOptions.metaInfo = true
            kotlinOptions.sourceMap = true
            kotlinOptions.moduleKind = "commonjs"
            kotlinOptions.main = "call"
        }
    }


    cocoapods {
        // Configure fields required by CocoaPods.
        summary = "Some description for a Kotlin/Native module"
        homepage = "Link to a Kotlin/Native module homepage"
    }


    sourceSets {
        commonMain.dependencies {
            // Kotlin
            implementation "org.jetbrains.kotlin:kotlin-stdlib-common:${Versions.kotlin}"

            // Coroutines
            implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:${Versions.kotlinCoroutines}"

            // Ktor
            implementation "io.ktor:ktor-client-core:${Versions.ktor}"
            implementation "io.ktor:ktor-client-json:${Versions.ktor}"
            implementation "io.ktor:ktor-client-logging:${Versions.ktor}"
            implementation "io.ktor:ktor-client-serialization:${Versions.ktor}"

            // Serialize
            implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:${Versions.kotlinxSerialization}"

            // SQL Delight
            implementation "com.squareup.sqldelight:runtime:${Versions.sqlDelight}"
            implementation "com.squareup.sqldelight:coroutines-extensions:${Versions.sqlDelight}"
        }

        androidMain.dependencies {
            // Kotlin
            implementation "org.jetbrains.kotlin:kotlin-stdlib:${Versions.kotlin}"

            // Coroutines
            implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${Versions.kotlinCoroutines}"
            implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${Versions.kotlinCoroutines}"

            // Ktor
            implementation "io.ktor:ktor-client-android:${Versions.ktor}"
            implementation "io.ktor:ktor-client-core-jvm:${Versions.ktor}"
            implementation "io.ktor:ktor-client-json-jvm:${Versions.ktor}"
            implementation "io.ktor:ktor-client-logging-jvm:${Versions.ktor}"
            implementation "io.ktor:ktor-client-serialization-jvm:${Versions.ktor}"

            // Serialize
            implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:${Versions.kotlinxSerialization}"

            // SQL Delight
            implementation "com.squareup.sqldelight:android-driver:${Versions.sqlDelight}"
            implementation "com.squareup.sqldelight:coroutines-extensions-jvm:${Versions.sqlDelight}"
        }

        iOSMain.dependencies {
            // Coroutines
            implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-native:${Versions.kotlinCoroutines}"

            // Ktor
            implementation "io.ktor:ktor-client-ios:${Versions.ktor}"
            implementation "io.ktor:ktor-client-core-native:${Versions.ktor}"
            implementation "io.ktor:ktor-client-json-native:${Versions.ktor}"
            implementation "io.ktor:ktor-client-logging-native:${Versions.ktor}"
            implementation "io.ktor:ktor-client-serialization-native:${Versions.ktor}"

            // Serialize
            implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:${Versions.kotlinxSerialization}"

            // SQL Delight
            implementation "com.squareup.sqldelight:ios-driver:${Versions.sqlDelight}"
        }

        jvmMain.dependencies {
            // Kotlin
            implementation "org.jetbrains.kotlin:kotlin-stdlib:${Versions.kotlin}"

            // Coroutines
            implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${Versions.kotlinCoroutines}"

            // Ktor
            implementation "io.ktor:ktor-client-core-jvm:${Versions.ktor}"
            implementation "io.ktor:ktor-client-json-jvm:${Versions.ktor}"
            implementation "io.ktor:ktor-client-serialization-jvm:${Versions.ktor}"


            // Serialize
            implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:${Versions.kotlinxSerialization}"

            // SQL Delight
            implementation "com.squareup.sqldelight:sqlite-driver:${Versions.sqlDelight}"
        }

        jsMain.dependencies {
            api Kotlin.stdlibJs
            api Kotlin.serializationRuntimeJs
            api Ktor.clientJs
            api Ktor.clientJsonJs
            api Ktor.clientLoggingJs
            api Ktor.clientSerializationJs
        }

    }
}

// workaround for https://youtrack.jetbrains.com/issue/KT-27170
configurations {
    compileClasspath
}


sqldelight {
    MyDatabase {
        packageName = "com.surrus.galwaybus.db"
        sourceFolders = ["sqldelight"]
    }
}

xcode {
    projectPath = "../ios/GalwayBusApp/GalwayBusApp.xcodeproj"
    target = "GalwayBusApp"
}